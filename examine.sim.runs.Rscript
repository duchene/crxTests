library(phangorn)
library(ggplot2)

scenlist <- list(popsize = c(0.02, 0.5, 1), Nloci = c(100, 500, 1000), ratevar = c(0.5, 0.005, 0.05), linaccel = c(0, 0.02, 0.1), nclust = c(1, 3, 5), meanrate = c(0.01, 0.05, 0.1), clustbyrate = c(T, F), Ntax = c(50))
scenarios <- expand.grid(scenlist)

simdirs <- paste0("scen", 1:nrow(scenarios))

# Create and fill vectors for results variables of interest.

pcak <- pcakdiff <- pcakwgt <- pcakwgtdiff <- propInfl <- propInfldiff <- accelSuccess <- accelFPR <- pphi <- ppsi <- vector()

for(i in 1:length(simdirs)){
	load(paste0("scen", i, "/simdata.Rdata"))
	pcak[i] <- simdata[[3]]$pca.best.k
	pcakdiff[i] <- simdata[[3]]$pca.best.k - scenarios[i,5]
	pcakwgt[i] <- simdata[[3]]$weighted.pca.best.k
	pcakwgtdiff[i] <- simdata[[3]]$weighted.pca.best.k - scenarios[i,5]
	propInfl[i] <- length(which(simdata[[3]]$pca.clock.space$pIL[,1:2] < 0.01)) / length(simdata[[3]]$pca.clock.space$pIL[,1:2])
	propInfldiff[i] <- propInfl[i] - scenarios[i, 4]
	if(length(simdata[[4]]) != 0){
		if(simdata[[1]]$edge[1,1] != Ntip(simdata[[1]])+1) stop("Species tree is badly formed at root.")
		sptr_unr <- simdata[[1]]
		sptr_unr$edge.length <- 0:(Nedge(simdata[[1]]) - 1)
		targetBrs <- which(unroot(sptr_unr)$edge.length %in% sptr_unr$edge.length[simdata[[4]]])
		accelSuccess[i] <- all(sapply(targetBrs, function(x) any(simdata[[3]]$pca.clock.space$pIL[x,1:10] < 0.01)))
		accelFPR[i] <- mean(apply(simdata[[3]]$pca.clock.space$pIL[-targetBrs,1:2], 2, function(x) length(which(x < 0.01))), na.rm = T) / Nedge(unroot(simdata[[1]]))
	} else {
		accelSuccess[i] <- T
		accelFPR[i] <- mean(apply(simdata[[3]]$pca.clock.space$pIL[,1:2], 2, function(x) length(which(x < 0.01))), na.rm = T) / Nedge(unroot(simdata[[1]]))
	}
	pphi[i] <- simdata[[3]]$pca.clock.space$pPhi
	ppsi[i] <- simdata[[3]]$pca.clock.space$pPsi
}

# Test associations between each estimate of interets and all simulated variables.

pcakPvals <- sapply(1:7, function(x) summary(lm(pcak ~ scenarios[,x]))$coefficients[2, 4])
pcakdiffPvals <- sapply(1:7, function(x) summary(lm(pcakdiff ~ scenarios[,x]))$coefficients[2, 4])
pcakwgtPvals <- sapply(1:7, function(x) summary(lm(pcakwgt ~ scenarios[,x]))$coefficients[2, 4])
pcakwgtdiffPvals <- sapply(1:7, function(x) summary(lm(pcakwgtdiff ~ scenarios[,x]))$coefficients[2, 4])
propInflPvals <- sapply(1:7, function(x) summary(lm(propInfl ~ scenarios[,x]))$coefficients[2, 4])
propInfldiffPvals <- sapply(1:7, function(x) summary(lm(propInfldiff ~ scenarios[,x]))$coefficients[2, 4])
accelSuccessPvals <- c(sapply(1:6, function(x) summary(lm(accelSuccess ~ scenarios[,x]))$coefficients[2, 4]), NA)
accelFPRPvals <- sapply(1:7, function(x) summary(lm(accelFPR ~ scenarios[,x]))$coefficients[2, 4])
pphiPvals <- sapply(1:7, function(x) summary(lm(pphi ~ scenarios[,x]))$coefficients[2, 4])
ppsiPvals <- sapply(1:7, function(x) summary(lm(ppsi ~ scenarios[,x]))$coefficients[2, 4])

keyVars_pca <- rbind(pcakPvals, pcakdiffPvals, pcakwgtPvals, pcakwgtdiffPvals, propInflPvals, propInfldiffPvals, accelSuccessPvals, accelFPRPvals, pphiPvals, ppsiPvals)
colnames(keyVars_pca) <- colnames(scenarios)[1:7]

alldatPCA <- cbind(scenarios, pcak, pcakdiff, pcakwgt, pcakwgtdiff, propInfl, propInfldiff, accelSuccess, accelFPR, pphi, ppsi)

#save(alldatPCA, keyVars_pca, file = "simdat.pca.Rdata")
